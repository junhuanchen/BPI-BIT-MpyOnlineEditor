<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
	<title>WebDav Python Editor</title>
	<style type="text/css" media="screen">
	.ace_editor {
		border: 1px solid lightgray;
		margin: auto;
		height: 600px;
		width: 100%;
	}
	.scrollmargin {
		height: 80px;
		text-align: center;
	}
	</style>
</head>

<body onload="RunInit();">
<div>
<pre id="editor"></pre>
</div>

<script src="http://raw.githack.com/ajaxorg/ace-builds/master/src-min-noconflict/ace.js" type="text/javascript" charset="utf-8"></script>

<script src="http://raw.githack.com/ajaxorg/ace-builds/master/src-min-noconflict/ext-language_tools.js" type="text/javascript" charset="utf-8"></script>

<!--
<script>
	var editor = ace.edit("editor");
	editor.setTheme("ace/theme/twilight");
	editor.session.setMode("ace/mode/python");
</script>
-->

<script type="text/javascript" src="dav.js"></script>
<script>
	
	var editor = ace.edit('editor');
	editor.setOptions({
		theme: "ace/theme/xcode",
		mode: "ace/mode/python",
		maxLines: 30,
		minLines: 30,
		autoScrollEditorIntoView: true,
		enableLiveAutocompletion: true,
		
	});
	
	editor.getSession().setUseWrapMode(true);
	document.getElementById('editor').style.fontSize='20px';
	
	var refs = {};
	function updateToolbar() {
		refs.saveButton.disabled = editor.session.getUndoManager().isClean();
		refs.undoButton.disabled = !editor.session.getUndoManager().hasUndo();
		refs.redoButton.disabled = !editor.session.getUndoManager().hasRedo();
	}
	editor.on("input", updateToolbar);
	function save() {
		localStorage.savedValue = editor.getValue();
		
		client.PUT(BaseDir + filename, localStorage.savedValue, wrapContinueHandler(setFile), this, 1);
		// console.log(localStorage.savedValue);
		
		editor.session.getUndoManager().markClean();
		updateToolbar();
	}
	editor.commands.addCommand({
		name: "save",
		exec: save,
		bindKey: { win: "ctrl-s", mac: "cmd-s" }
	});
	
	buildDom(["div", { class: "toolbar" },
		["button", {
			ref: "saveButton",
			onclick: save
		}, "save"],
		["button", {
			ref: "undoButton",
			onclick: function() {
				editor.undo();
			}
		}, "undo"],
		["button", {
			ref: "redoButton",
			onclick: function() {
				editor.redo();
			}
		}, "redo"],
	], document.body, refs);
	document.body.appendChild(editor.container)
	
	window.editor = editor;
	
	function buildDom(arr, parent, refs) {
		if (typeof arr == "string" && arr) {
			var txt = document.createTextNode(arr);
			if (parent)
				parent.appendChild(txt);
			return txt;
		}
		
		if (!Array.isArray(arr))
			return arr;
		if (typeof arr[0] != "string" || !arr[0]) {
			var els = [];
			for (var i = 0; i < arr.length; i++) {
				var ch = buildDom(arr[i], parent, refs);
				ch && els.push(ch);
			}
			return els;
		}
		
		var el = document.createElement(arr[0]);
		var options = arr[1];
		var childIndex = 1;
		if (options && typeof options == "object" && !Array.isArray(options)) {
			childIndex = 2;
			Object.keys(options).forEach(function(n) {
				var val = options[n];
				if (n === "class") {
					el.className = Array.isArray(val) ? val.join(" ") : val;
				} else if (typeof val == "function") {
					el[n] = val;
				} else if (n === "ref") {
					if (refs) refs[val] = el;
				} else {
					el.setAttribute(n, val);
				}
			});
		}
		for (var i = childIndex; i < arr.length; i++)
			buildDom(arr[i], el, refs);
		if (parent)
			parent.appendChild(el);
		return el;
	};
	
	function getQueryVariable(variable) {
		var query = window.location.search.substring(1);
		var vars = query.split("&");
		for (var i=0;i<vars.length;i++) {
			var pair = vars[i].split("=");
			if(pair[0] == variable) {
				return pair[1];
			}
		}
		return(false);
	}
	
	BaseDir = '/';
	filename = getQueryVariable("filename");
	
	var client = new davlib.DavClient();
	client.initialize(location.hostname, 80, 'http', 'user', 'password');

	function wrapContinueHandler(handler) {
		return function(status, statusstr, content) {
			handler(status, content);
		};
	};
	
	function getFile(status, content) {
		if (status == 200) {
			editor.setValue(content);
		} else {
			;
		};
	};
	
	function setFile(status, content) {
		if (status == 201) {
			alert('Save ok');
		} else {
			;
		};
	};
	
	function RunInit() {
		client.GET(BaseDir + filename, wrapContinueHandler(getFile), this, 1);
	}

</script>

</body>
</html>
